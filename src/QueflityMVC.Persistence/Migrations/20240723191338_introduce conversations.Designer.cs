// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QueflityMVC.Persistence;

#nullable disable

namespace QueflityMVC.Persistence.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240723191338_introduce conversations")]
    partial class introduceconversations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComponentItem", b =>
                {
                    b.Property<int>("ComponentsId")
                        .HasColumnType("int");

                    b.Property<int>("ItemsId")
                        .HasColumnType("int");

                    b.HasKey("ComponentsId", "ItemsId");

                    b.HasIndex("ItemsId");

                    b.ToTable("ComponentItem");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QueflityMVC.Domain.Common.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrderNo")
                        .HasColumnType("bigint");

                    b.Property<bool>("ShouldBeShown")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Product");

                    b.HasDiscriminator().HasValue("Product");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Health"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Computers"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Beauty"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Kids"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Components");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rubber"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Frozen"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cotton"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Soft"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Soft"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Cotton"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Granite"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Soft"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Concrete"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Cotton"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Steel"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Rubber"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Cotton"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Granite"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Frozen"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<long>("ItemsAmount")
                        .HasColumnType("bigint");

                    b.Property<int>("KitId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerItem")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("KitId");

                    b.ToTable("SetElements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 10,
                            ItemsAmount = 4L,
                            KitId = 19,
                            PricePerItem = 88.79m
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 6,
                            ItemsAmount = 8L,
                            KitId = 18,
                            PricePerItem = 35.31m
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 9,
                            ItemsAmount = 6L,
                            KitId = 11,
                            PricePerItem = 105.83m
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 1,
                            ItemsAmount = 7L,
                            KitId = 20,
                            PricePerItem = 37.89m
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 4,
                            ItemsAmount = 7L,
                            KitId = 20,
                            PricePerItem = 3.06m
                        },
                        new
                        {
                            Id = 6,
                            ItemId = 9,
                            ItemsAmount = 3L,
                            KitId = 15,
                            PricePerItem = 53.10m
                        },
                        new
                        {
                            Id = 7,
                            ItemId = 2,
                            ItemsAmount = 9L,
                            KitId = 11,
                            PricePerItem = 105.47m
                        },
                        new
                        {
                            Id = 8,
                            ItemId = 7,
                            ItemsAmount = 2L,
                            KitId = 15,
                            PricePerItem = 12.79m
                        },
                        new
                        {
                            Id = 9,
                            ItemId = 5,
                            ItemsAmount = 1L,
                            KitId = 17,
                            PricePerItem = 78.37m
                        },
                        new
                        {
                            Id = 10,
                            ItemId = 4,
                            ItemsAmount = 1L,
                            KitId = 12,
                            PricePerItem = 29.01m
                        },
                        new
                        {
                            Id = 11,
                            ItemId = 10,
                            ItemsAmount = 8L,
                            KitId = 14,
                            PricePerItem = 110.85m
                        },
                        new
                        {
                            Id = 12,
                            ItemId = 7,
                            ItemsAmount = 4L,
                            KitId = 13,
                            PricePerItem = 48.64m
                        },
                        new
                        {
                            Id = 13,
                            ItemId = 5,
                            ItemsAmount = 10L,
                            KitId = 14,
                            PricePerItem = 13.03m
                        },
                        new
                        {
                            Id = 14,
                            ItemId = 8,
                            ItemsAmount = 3L,
                            KitId = 15,
                            PricePerItem = 121.28m
                        },
                        new
                        {
                            Id = 15,
                            ItemId = 9,
                            ItemsAmount = 10L,
                            KitId = 20,
                            PricePerItem = 55.38m
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AltDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AltDescription = "nulla",
                            FileUrl = "https://picsum.photos/640/480/?image=367"
                        },
                        new
                        {
                            Id = 2,
                            AltDescription = "cum",
                            FileUrl = "https://picsum.photos/640/480/?image=986"
                        },
                        new
                        {
                            Id = 3,
                            AltDescription = "quas",
                            FileUrl = "https://picsum.photos/640/480/?image=764"
                        },
                        new
                        {
                            Id = 4,
                            AltDescription = "laboriosam",
                            FileUrl = "https://picsum.photos/640/480/?image=337"
                        },
                        new
                        {
                            Id = 5,
                            AltDescription = "velit",
                            FileUrl = "https://picsum.photos/640/480/?image=449"
                        },
                        new
                        {
                            Id = 6,
                            AltDescription = "eos",
                            FileUrl = "https://picsum.photos/640/480/?image=572"
                        },
                        new
                        {
                            Id = 7,
                            AltDescription = "qui",
                            FileUrl = "https://picsum.photos/640/480/?image=716"
                        },
                        new
                        {
                            Id = 8,
                            AltDescription = "quos",
                            FileUrl = "https://picsum.photos/640/480/?image=209"
                        },
                        new
                        {
                            Id = 9,
                            AltDescription = "eveniet",
                            FileUrl = "https://picsum.photos/640/480/?image=1023"
                        },
                        new
                        {
                            Id = 10,
                            AltDescription = "consequatur",
                            FileUrl = "https://picsum.photos/640/480/?image=149"
                        },
                        new
                        {
                            Id = 11,
                            AltDescription = "qui",
                            FileUrl = "https://picsum.photos/640/480/?image=953"
                        },
                        new
                        {
                            Id = 12,
                            AltDescription = "vel",
                            FileUrl = "https://picsum.photos/640/480/?image=981"
                        },
                        new
                        {
                            Id = 13,
                            AltDescription = "vel",
                            FileUrl = "https://picsum.photos/640/480/?image=797"
                        },
                        new
                        {
                            Id = 14,
                            AltDescription = "adipisci",
                            FileUrl = "https://picsum.photos/640/480/?image=558"
                        },
                        new
                        {
                            Id = 15,
                            AltDescription = "veniam",
                            FileUrl = "https://picsum.photos/640/480/?image=817"
                        },
                        new
                        {
                            Id = 16,
                            AltDescription = "laborum",
                            FileUrl = "https://picsum.photos/640/480/?image=495"
                        },
                        new
                        {
                            Id = 17,
                            AltDescription = "necessitatibus",
                            FileUrl = "https://picsum.photos/640/480/?image=700"
                        },
                        new
                        {
                            Id = 18,
                            AltDescription = "quia",
                            FileUrl = "https://picsum.photos/640/480/?image=1049"
                        },
                        new
                        {
                            Id = 19,
                            AltDescription = "nostrum",
                            FileUrl = "https://picsum.photos/640/480/?image=650"
                        },
                        new
                        {
                            Id = 20,
                            AltDescription = "qui",
                            FileUrl = "https://picsum.photos/640/480/?image=63"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConversationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.HasBaseType("QueflityMVC.Domain.Common.Product");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasIndex("CategoryId");

                    b.HasDiscriminator().HasValue("Item");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageId = 1,
                            Name = "Rustic Soft Cheese",
                            ShouldBeShown = false,
                            CategoryId = 5,
                            Price = 53.15m
                        },
                        new
                        {
                            Id = 2,
                            ImageId = 2,
                            Name = "Unbranded Steel Salad",
                            ShouldBeShown = false,
                            CategoryId = 2,
                            Price = 7.32m
                        },
                        new
                        {
                            Id = 3,
                            ImageId = 3,
                            Name = "Ergonomic Plastic Mouse",
                            ShouldBeShown = false,
                            CategoryId = 4,
                            Price = 15.51m
                        },
                        new
                        {
                            Id = 4,
                            ImageId = 4,
                            Name = "Rustic Granite Bike",
                            ShouldBeShown = false,
                            CategoryId = 3,
                            Price = 2.10m
                        },
                        new
                        {
                            Id = 5,
                            ImageId = 5,
                            Name = "Rustic Rubber Mouse",
                            OrderNo = 5L,
                            ShouldBeShown = true,
                            CategoryId = 2,
                            Price = 78.55m
                        },
                        new
                        {
                            Id = 6,
                            ImageId = 6,
                            Name = "Unbranded Concrete Shirt",
                            OrderNo = 3L,
                            ShouldBeShown = true,
                            CategoryId = 5,
                            Price = 4.74m
                        },
                        new
                        {
                            Id = 7,
                            ImageId = 7,
                            Name = "Fantastic Frozen Bacon",
                            OrderNo = 1L,
                            ShouldBeShown = true,
                            CategoryId = 4,
                            Price = 52.40m
                        },
                        new
                        {
                            Id = 8,
                            ImageId = 8,
                            Name = "Sleek Cotton Car",
                            OrderNo = 4L,
                            ShouldBeShown = true,
                            CategoryId = 4,
                            Price = 154.95m
                        },
                        new
                        {
                            Id = 9,
                            ImageId = 9,
                            Name = "Licensed Soft Computer",
                            ShouldBeShown = false,
                            CategoryId = 2,
                            Price = 114.06m
                        },
                        new
                        {
                            Id = 10,
                            ImageId = 10,
                            Name = "Incredible Rubber Keyboard",
                            OrderNo = 2L,
                            ShouldBeShown = true,
                            CategoryId = 1,
                            Price = 141.39m
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.HasBaseType("QueflityMVC.Domain.Common.Product");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.HasIndex("ItemId");

                    b.HasDiscriminator().HasValue("Kit");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            ImageId = 11,
                            Name = "Incredible Metal Chips",
                            OrderNo = 9L,
                            ShouldBeShown = true,
                            Description = "Veniam laboriosam alias et cupiditate."
                        },
                        new
                        {
                            Id = 12,
                            ImageId = 12,
                            Name = "Unbranded Soft Chicken",
                            ShouldBeShown = false,
                            Description = "Quia voluptatibus quasi."
                        },
                        new
                        {
                            Id = 13,
                            ImageId = 13,
                            Name = "Licensed Metal Soap",
                            OrderNo = 8L,
                            ShouldBeShown = true,
                            Description = "Suscipit cupiditate aut odio iusto hic."
                        },
                        new
                        {
                            Id = 14,
                            ImageId = 14,
                            Name = "Unbranded Fresh Keyboard",
                            ShouldBeShown = false,
                            Description = "Officia illo enim iure consequatur perferendis."
                        },
                        new
                        {
                            Id = 15,
                            ImageId = 15,
                            Name = "Gorgeous Metal Chair",
                            OrderNo = 7L,
                            ShouldBeShown = true,
                            Description = "Recusandae mollitia error."
                        },
                        new
                        {
                            Id = 16,
                            ImageId = 16,
                            Name = "Practical Soft Soap",
                            OrderNo = 0L,
                            ShouldBeShown = true,
                            Description = "Perferendis beatae soluta."
                        },
                        new
                        {
                            Id = 17,
                            ImageId = 17,
                            Name = "Ergonomic Plastic Chair",
                            ShouldBeShown = false,
                            Description = "Unde quibusdam nobis."
                        },
                        new
                        {
                            Id = 18,
                            ImageId = 18,
                            Name = "Handcrafted Steel Tuna",
                            ShouldBeShown = false,
                            Description = "Voluptatem reiciendis ullam ut dolor et dolorum pariatur."
                        },
                        new
                        {
                            Id = 19,
                            ImageId = 19,
                            Name = "Rustic Fresh Chicken",
                            OrderNo = 6L,
                            ShouldBeShown = true,
                            Description = "Omnis consequatur veniam."
                        },
                        new
                        {
                            Id = 20,
                            ImageId = 20,
                            Name = "Refined Frozen Salad",
                            ShouldBeShown = false,
                            Description = "Qui et labore in voluptatem aspernatur doloremque."
                        });
                });

            modelBuilder.Entity("ComponentItem", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Component", null)
                        .WithMany()
                        .HasForeignKey("ComponentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QueflityMVC.Domain.Common.Product", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Conversation", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Common.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Element", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Item", "Item")
                        .WithMany("SetElements")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.Kit", "Kit")
                        .WithMany("Elements")
                        .HasForeignKey("KitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Kit");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Message", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Item", null)
                        .WithMany("Kits")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Conversation", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.Navigation("Kits");

                    b.Navigation("SetElements");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.Navigation("Elements");
                });
#pragma warning restore 612, 618
        }
    }
}
