// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QueflityMVC.Persistence;

#nullable disable

namespace QueflityMVC.Persistence.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240801203505_.")]
    partial class _
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComponentItem", b =>
                {
                    b.Property<int>("ComponentsId")
                        .HasColumnType("int");

                    b.Property<int>("ItemsId")
                        .HasColumnType("int");

                    b.HasKey("ComponentsId", "ItemsId");

                    b.HasIndex("ItemsId");

                    b.ToTable("ComponentItem");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QueflityMVC.Domain.Common.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrderNo")
                        .HasColumnType("bigint");

                    b.Property<bool>("ShouldBeShown")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Product");

                    b.HasDiscriminator().HasValue("Product");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Computers"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Outdoors"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Components");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Soft"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Granite"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Granite"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Rubber"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rubber"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Cotton"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Soft"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Cotton"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Fresh"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Frozen"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Wooden"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Cotton"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Granite"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Granite"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Granite"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Wooden"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Frozen"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Frozen"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Plastic"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<long>("ItemsAmount")
                        .HasColumnType("bigint");

                    b.Property<int>("KitId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerItem")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("KitId");

                    b.ToTable("SetElements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 1,
                            ItemsAmount = 1L,
                            KitId = 15,
                            PricePerItem = 85.11m
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 8,
                            ItemsAmount = 6L,
                            KitId = 15,
                            PricePerItem = 41.69m
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 8,
                            ItemsAmount = 9L,
                            KitId = 13,
                            PricePerItem = 26.82m
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 2,
                            ItemsAmount = 3L,
                            KitId = 15,
                            PricePerItem = 109.46m
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 7,
                            ItemsAmount = 1L,
                            KitId = 17,
                            PricePerItem = 159.32m
                        },
                        new
                        {
                            Id = 7,
                            ItemId = 7,
                            ItemsAmount = 6L,
                            KitId = 16,
                            PricePerItem = 4.10m
                        },
                        new
                        {
                            Id = 8,
                            ItemId = 5,
                            ItemsAmount = 2L,
                            KitId = 12,
                            PricePerItem = 29.04m
                        },
                        new
                        {
                            Id = 9,
                            ItemId = 8,
                            ItemsAmount = 7L,
                            KitId = 17,
                            PricePerItem = 19.69m
                        },
                        new
                        {
                            Id = 11,
                            ItemId = 6,
                            ItemsAmount = 5L,
                            KitId = 13,
                            PricePerItem = 8.66m
                        },
                        new
                        {
                            Id = 12,
                            ItemId = 4,
                            ItemsAmount = 10L,
                            KitId = 13,
                            PricePerItem = 141.48m
                        },
                        new
                        {
                            Id = 13,
                            ItemId = 3,
                            ItemsAmount = 8L,
                            KitId = 11,
                            PricePerItem = 43.92m
                        },
                        new
                        {
                            Id = 14,
                            ItemId = 4,
                            ItemsAmount = 9L,
                            KitId = 18,
                            PricePerItem = 10.30m
                        },
                        new
                        {
                            Id = 15,
                            ItemId = 7,
                            ItemsAmount = 4L,
                            KitId = 18,
                            PricePerItem = 29.48m
                        },
                        new
                        {
                            Id = 16,
                            ItemId = 3,
                            ItemsAmount = 5L,
                            KitId = 12,
                            PricePerItem = 37.82m
                        },
                        new
                        {
                            Id = 17,
                            ItemId = 4,
                            ItemsAmount = 2L,
                            KitId = 11,
                            PricePerItem = 85.25m
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AltDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AltDescription = "et",
                            FileUrl = "https://picsum.photos/640/480/?image=85"
                        },
                        new
                        {
                            Id = 2,
                            AltDescription = "sunt",
                            FileUrl = "https://picsum.photos/640/480/?image=673"
                        },
                        new
                        {
                            Id = 3,
                            AltDescription = "occaecati",
                            FileUrl = "https://picsum.photos/640/480/?image=301"
                        },
                        new
                        {
                            Id = 4,
                            AltDescription = "perferendis",
                            FileUrl = "https://picsum.photos/640/480/?image=322"
                        },
                        new
                        {
                            Id = 5,
                            AltDescription = "ipsa",
                            FileUrl = "https://picsum.photos/640/480/?image=860"
                        },
                        new
                        {
                            Id = 6,
                            AltDescription = "ex",
                            FileUrl = "https://picsum.photos/640/480/?image=691"
                        },
                        new
                        {
                            Id = 7,
                            AltDescription = "sint",
                            FileUrl = "https://picsum.photos/640/480/?image=737"
                        },
                        new
                        {
                            Id = 8,
                            AltDescription = "ex",
                            FileUrl = "https://picsum.photos/640/480/?image=1069"
                        },
                        new
                        {
                            Id = 9,
                            AltDescription = "facilis",
                            FileUrl = "https://picsum.photos/640/480/?image=929"
                        },
                        new
                        {
                            Id = 10,
                            AltDescription = "et",
                            FileUrl = "https://picsum.photos/640/480/?image=1066"
                        },
                        new
                        {
                            Id = 11,
                            AltDescription = "adipisci",
                            FileUrl = "https://picsum.photos/640/480/?image=356"
                        },
                        new
                        {
                            Id = 12,
                            AltDescription = "quo",
                            FileUrl = "https://picsum.photos/640/480/?image=332"
                        },
                        new
                        {
                            Id = 13,
                            AltDescription = "quo",
                            FileUrl = "https://picsum.photos/640/480/?image=869"
                        },
                        new
                        {
                            Id = 14,
                            AltDescription = "at",
                            FileUrl = "https://picsum.photos/640/480/?image=425"
                        },
                        new
                        {
                            Id = 15,
                            AltDescription = "ea",
                            FileUrl = "https://picsum.photos/640/480/?image=172"
                        },
                        new
                        {
                            Id = 16,
                            AltDescription = "quam",
                            FileUrl = "https://picsum.photos/640/480/?image=864"
                        },
                        new
                        {
                            Id = 17,
                            AltDescription = "sapiente",
                            FileUrl = "https://picsum.photos/640/480/?image=1084"
                        },
                        new
                        {
                            Id = 18,
                            AltDescription = "qui",
                            FileUrl = "https://picsum.photos/640/480/?image=224"
                        },
                        new
                        {
                            Id = 19,
                            AltDescription = "quo",
                            FileUrl = "https://picsum.photos/640/480/?image=746"
                        },
                        new
                        {
                            Id = 20,
                            AltDescription = "alias",
                            FileUrl = "https://picsum.photos/640/480/?image=314"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConversationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.HasBaseType("QueflityMVC.Domain.Common.Product");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasIndex("CategoryId");

                    b.HasDiscriminator().HasValue("Item");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageId = 1,
                            Name = "Handmade Concrete Bike",
                            OrderNo = 7L,
                            ShouldBeShown = true,
                            CategoryId = 3,
                            Price = 24.93m
                        },
                        new
                        {
                            Id = 2,
                            ImageId = 2,
                            Name = "Intelligent Frozen Soap",
                            ShouldBeShown = false,
                            CategoryId = 1,
                            Price = 29.69m
                        },
                        new
                        {
                            Id = 3,
                            ImageId = 3,
                            Name = "Licensed Plastic Hat",
                            ShouldBeShown = false,
                            CategoryId = 4,
                            Price = 98.13m
                        },
                        new
                        {
                            Id = 4,
                            ImageId = 4,
                            Name = "Fantastic Rubber Car",
                            ShouldBeShown = false,
                            CategoryId = 1,
                            Price = 56.64m
                        },
                        new
                        {
                            Id = 5,
                            ImageId = 5,
                            Name = "Practical Steel Salad",
                            OrderNo = 6L,
                            ShouldBeShown = true,
                            CategoryId = 1,
                            Price = 5.76m
                        },
                        new
                        {
                            Id = 6,
                            ImageId = 6,
                            Name = "Handcrafted Soft Hat",
                            ShouldBeShown = false,
                            CategoryId = 5,
                            Price = 30.09m
                        },
                        new
                        {
                            Id = 7,
                            ImageId = 7,
                            Name = "Handmade Soft Salad",
                            ShouldBeShown = false,
                            CategoryId = 1,
                            Price = 13.07m
                        },
                        new
                        {
                            Id = 8,
                            ImageId = 8,
                            Name = "Gorgeous Steel Fish",
                            OrderNo = 1L,
                            ShouldBeShown = true,
                            CategoryId = 4,
                            Price = 13.12m
                        },
                        new
                        {
                            Id = 9,
                            ImageId = 9,
                            Name = "Incredible Metal Cheese",
                            OrderNo = 5L,
                            ShouldBeShown = true,
                            CategoryId = 4,
                            Price = 12.99m
                        },
                        new
                        {
                            Id = 10,
                            ImageId = 10,
                            Name = "Incredible Cotton Shirt",
                            ShouldBeShown = false,
                            CategoryId = 1,
                            Price = 36.99m
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.HasBaseType("QueflityMVC.Domain.Common.Product");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.HasIndex("ItemId");

                    b.HasDiscriminator().HasValue("Kit");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            ImageId = 11,
                            Name = "Gorgeous Soft Gloves",
                            OrderNo = 0L,
                            ShouldBeShown = true,
                            Description = "Quibusdam dolores quibusdam."
                        },
                        new
                        {
                            Id = 12,
                            ImageId = 12,
                            Name = "Sleek Plastic Shirt",
                            ShouldBeShown = false,
                            Description = "Hic quia perspiciatis voluptas repudiandae et id mollitia voluptas."
                        },
                        new
                        {
                            Id = 13,
                            ImageId = 13,
                            Name = "Fantastic Metal Soap",
                            ShouldBeShown = false,
                            Description = "Voluptatem expedita consectetur sit officia maxime reiciendis accusantium odit alias."
                        },
                        new
                        {
                            Id = 14,
                            ImageId = 14,
                            Name = "Fantastic Frozen Cheese",
                            OrderNo = 8L,
                            ShouldBeShown = true,
                            Description = "In unde consequatur magnam et molestias dolores est optio et."
                        },
                        new
                        {
                            Id = 15,
                            ImageId = 15,
                            Name = "Sleek Frozen Chips",
                            OrderNo = 3L,
                            ShouldBeShown = true,
                            Description = "Dolorem est sit porro fuga qui quibusdam sit sapiente labore."
                        },
                        new
                        {
                            Id = 16,
                            ImageId = 16,
                            Name = "Small Plastic Shirt",
                            OrderNo = 4L,
                            ShouldBeShown = true,
                            Description = "Possimus qui consequatur omnis voluptas illum in itaque similique ratione."
                        },
                        new
                        {
                            Id = 17,
                            ImageId = 17,
                            Name = "Sleek Granite Chair",
                            OrderNo = 9L,
                            ShouldBeShown = true,
                            Description = "Voluptas similique architecto placeat."
                        },
                        new
                        {
                            Id = 18,
                            ImageId = 18,
                            Name = "Handcrafted Plastic Hat",
                            ShouldBeShown = false,
                            Description = "Laudantium omnis voluptas voluptate optio aspernatur error."
                        },
                        new
                        {
                            Id = 19,
                            ImageId = 19,
                            Name = "Handmade Rubber Chicken",
                            OrderNo = 2L,
                            ShouldBeShown = true,
                            Description = "Velit earum accusantium vitae quia dolores quae et."
                        },
                        new
                        {
                            Id = 20,
                            ImageId = 20,
                            Name = "Incredible Plastic Towels",
                            ShouldBeShown = false,
                            Description = "Voluptatem quia impedit ab voluptatibus error numquam."
                        });
                });

            modelBuilder.Entity("ComponentItem", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Component", null)
                        .WithMany()
                        .HasForeignKey("ComponentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QueflityMVC.Domain.Common.Product", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Conversation", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Common.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Element", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Item", "Item")
                        .WithMany("SetElements")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.Kit", "Kit")
                        .WithMany("Elements")
                        .HasForeignKey("KitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Kit");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Message", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Item", null)
                        .WithMany("Kits")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Conversation", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.Navigation("Kits");

                    b.Navigation("SetElements");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.Navigation("Elements");
                });
#pragma warning restore 612, 618
        }
    }
}
