// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QueflityMVC.Infrastructure;

#nullable disable

namespace QueflityMVC.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240229214504_Seed-Data")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComponentItem", b =>
                {
                    b.Property<int>("ComponentsId")
                        .HasColumnType("int");

                    b.Property<int>("ItemsId")
                        .HasColumnType("int");

                    b.HasKey("ComponentsId", "ItemsId");

                    b.HasIndex("ItemsId");

                    b.ToTable("ComponentItem");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QueflityMVC.Domain.Common.BasePurchasableEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrderNo")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<bool>("ShouldBeShown")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("BasePurchasableEntity");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BasePurchasableEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Jewelery"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Movies"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Beauty"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Computers"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Toys"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Components");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Granite"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Frozen"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Concrete"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Frozen"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Granite"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Rubber"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Steel"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Concrete"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Soft"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Concrete"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Concrete"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Fresh"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Wooden"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<long>("ItemsAmount")
                        .HasColumnType("bigint");

                    b.Property<int>("KitId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerItem")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("KitId");

                    b.ToTable("SetElements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 8,
                            ItemsAmount = 8L,
                            KitId = 16,
                            PricePerItem = 46.90m
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 10,
                            ItemsAmount = 4L,
                            KitId = 13,
                            PricePerItem = 21.43m
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 4,
                            ItemsAmount = 8L,
                            KitId = 18,
                            PricePerItem = 57.40m
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 8,
                            ItemsAmount = 5L,
                            KitId = 11,
                            PricePerItem = 47.50m
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 8,
                            ItemsAmount = 4L,
                            KitId = 13,
                            PricePerItem = 53.41m
                        },
                        new
                        {
                            Id = 6,
                            ItemId = 6,
                            ItemsAmount = 8L,
                            KitId = 13,
                            PricePerItem = 85.38m
                        },
                        new
                        {
                            Id = 7,
                            ItemId = 10,
                            ItemsAmount = 2L,
                            KitId = 16,
                            PricePerItem = 127.19m
                        },
                        new
                        {
                            Id = 8,
                            ItemId = 1,
                            ItemsAmount = 8L,
                            KitId = 17,
                            PricePerItem = 72.87m
                        },
                        new
                        {
                            Id = 9,
                            ItemId = 3,
                            ItemsAmount = 10L,
                            KitId = 15,
                            PricePerItem = 45.98m
                        },
                        new
                        {
                            Id = 10,
                            ItemId = 4,
                            ItemsAmount = 7L,
                            KitId = 19,
                            PricePerItem = 20.53m
                        },
                        new
                        {
                            Id = 11,
                            ItemId = 10,
                            ItemsAmount = 8L,
                            KitId = 12,
                            PricePerItem = 8.99m
                        },
                        new
                        {
                            Id = 12,
                            ItemId = 9,
                            ItemsAmount = 1L,
                            KitId = 19,
                            PricePerItem = 90.48m
                        },
                        new
                        {
                            Id = 13,
                            ItemId = 6,
                            ItemsAmount = 4L,
                            KitId = 16,
                            PricePerItem = 34.90m
                        },
                        new
                        {
                            Id = 14,
                            ItemId = 2,
                            ItemsAmount = 9L,
                            KitId = 19,
                            PricePerItem = 143.38m
                        },
                        new
                        {
                            Id = 15,
                            ItemId = 4,
                            ItemsAmount = 10L,
                            KitId = 17,
                            PricePerItem = 19.94m
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AltDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AltDescription = "repellendus",
                            FileUrl = "https://picsum.photos/640/480/?image=630"
                        },
                        new
                        {
                            Id = 2,
                            AltDescription = "voluptatum",
                            FileUrl = "https://picsum.photos/640/480/?image=421"
                        },
                        new
                        {
                            Id = 3,
                            AltDescription = "et",
                            FileUrl = "https://picsum.photos/640/480/?image=619"
                        },
                        new
                        {
                            Id = 4,
                            AltDescription = "accusantium",
                            FileUrl = "https://picsum.photos/640/480/?image=74"
                        },
                        new
                        {
                            Id = 5,
                            AltDescription = "sed",
                            FileUrl = "https://picsum.photos/640/480/?image=721"
                        },
                        new
                        {
                            Id = 6,
                            AltDescription = "doloribus",
                            FileUrl = "https://picsum.photos/640/480/?image=571"
                        },
                        new
                        {
                            Id = 7,
                            AltDescription = "aliquid",
                            FileUrl = "https://picsum.photos/640/480/?image=160"
                        },
                        new
                        {
                            Id = 8,
                            AltDescription = "quis",
                            FileUrl = "https://picsum.photos/640/480/?image=506"
                        },
                        new
                        {
                            Id = 9,
                            AltDescription = "necessitatibus",
                            FileUrl = "https://picsum.photos/640/480/?image=590"
                        },
                        new
                        {
                            Id = 10,
                            AltDescription = "amet",
                            FileUrl = "https://picsum.photos/640/480/?image=62"
                        },
                        new
                        {
                            Id = 11,
                            AltDescription = "mollitia",
                            FileUrl = "https://picsum.photos/640/480/?image=86"
                        },
                        new
                        {
                            Id = 12,
                            AltDescription = "similique",
                            FileUrl = "https://picsum.photos/640/480/?image=633"
                        },
                        new
                        {
                            Id = 13,
                            AltDescription = "voluptates",
                            FileUrl = "https://picsum.photos/640/480/?image=315"
                        },
                        new
                        {
                            Id = 14,
                            AltDescription = "dolore",
                            FileUrl = "https://picsum.photos/640/480/?image=567"
                        },
                        new
                        {
                            Id = 15,
                            AltDescription = "ullam",
                            FileUrl = "https://picsum.photos/640/480/?image=611"
                        },
                        new
                        {
                            Id = 16,
                            AltDescription = "quasi",
                            FileUrl = "https://picsum.photos/640/480/?image=14"
                        },
                        new
                        {
                            Id = 17,
                            AltDescription = "dolor",
                            FileUrl = "https://picsum.photos/640/480/?image=116"
                        },
                        new
                        {
                            Id = 18,
                            AltDescription = "facere",
                            FileUrl = "https://picsum.photos/640/480/?image=492"
                        },
                        new
                        {
                            Id = 19,
                            AltDescription = "quae",
                            FileUrl = "https://picsum.photos/640/480/?image=866"
                        },
                        new
                        {
                            Id = 20,
                            AltDescription = "accusamus",
                            FileUrl = "https://picsum.photos/640/480/?image=948"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.HasBaseType("QueflityMVC.Domain.Common.BasePurchasableEntity");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasIndex("CategoryId");

                    b.HasDiscriminator().HasValue("Item");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageId = 1,
                            Name = "Tasty Wooden Chips",
                            OrderNo = 4L,
                            Price = 143.18m,
                            ShouldBeShown = true,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 2,
                            ImageId = 2,
                            Name = "Incredible Wooden Cheese",
                            OrderNo = 8L,
                            Price = 1.68m,
                            ShouldBeShown = true,
                            CategoryId = 2
                        },
                        new
                        {
                            Id = 3,
                            ImageId = 3,
                            Name = "Tasty Concrete Bike",
                            OrderNo = 9L,
                            Price = 3.06m,
                            ShouldBeShown = true,
                            CategoryId = 4
                        },
                        new
                        {
                            Id = 4,
                            ImageId = 4,
                            Name = "Ergonomic Steel Table",
                            Price = 25.90m,
                            ShouldBeShown = false,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 5,
                            ImageId = 5,
                            Name = "Practical Plastic Chair",
                            OrderNo = 7L,
                            Price = 17.79m,
                            ShouldBeShown = true,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 6,
                            ImageId = 6,
                            Name = "Handmade Steel Tuna",
                            Price = 32.53m,
                            ShouldBeShown = false,
                            CategoryId = 5
                        },
                        new
                        {
                            Id = 7,
                            ImageId = 7,
                            Name = "Licensed Fresh Mouse",
                            OrderNo = 1L,
                            Price = 29.96m,
                            ShouldBeShown = true,
                            CategoryId = 5
                        },
                        new
                        {
                            Id = 8,
                            ImageId = 8,
                            Name = "Fantastic Concrete Shirt",
                            Price = 52.06m,
                            ShouldBeShown = false,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 9,
                            ImageId = 9,
                            Name = "Rustic Rubber Sausages",
                            Price = 42.29m,
                            ShouldBeShown = false,
                            CategoryId = 5
                        },
                        new
                        {
                            Id = 10,
                            ImageId = 10,
                            Name = "Awesome Frozen Hat",
                            OrderNo = 3L,
                            Price = 65.26m,
                            ShouldBeShown = true,
                            CategoryId = 1
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.HasBaseType("QueflityMVC.Domain.Common.BasePurchasableEntity");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.HasIndex("ItemId");

                    b.HasDiscriminator().HasValue("Kit");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            ImageId = 11,
                            Name = "Awesome Soft Bacon",
                            Price = 237.50m,
                            ShouldBeShown = false,
                            Description = "Corrupti impedit fuga velit harum iure ullam culpa."
                        },
                        new
                        {
                            Id = 12,
                            ImageId = 12,
                            Name = "Handmade Metal Hat",
                            OrderNo = 5L,
                            Price = 71.92m,
                            ShouldBeShown = true,
                            Description = "Quibusdam corrupti optio."
                        },
                        new
                        {
                            Id = 13,
                            ImageId = 13,
                            Name = "Small Wooden Table",
                            Price = 982.40m,
                            ShouldBeShown = false,
                            Description = "Enim maxime tenetur perspiciatis temporibus cupiditate ut quas."
                        },
                        new
                        {
                            Id = 14,
                            ImageId = 14,
                            Name = "Practical Frozen Pizza",
                            Price = 0m,
                            ShouldBeShown = false,
                            Description = "Odio sunt id possimus voluptate."
                        },
                        new
                        {
                            Id = 15,
                            ImageId = 15,
                            Name = "Awesome Cotton Car",
                            OrderNo = 2L,
                            Price = 459.80m,
                            ShouldBeShown = true,
                            Description = "Voluptatem autem consequatur id ipsam."
                        },
                        new
                        {
                            Id = 16,
                            ImageId = 16,
                            Name = "Intelligent Cotton Pants",
                            Price = 769.18m,
                            ShouldBeShown = false,
                            Description = "Possimus magnam at quibusdam in voluptas saepe eos."
                        },
                        new
                        {
                            Id = 17,
                            ImageId = 17,
                            Name = "Small Fresh Keyboard",
                            OrderNo = 0L,
                            Price = 782.36m,
                            ShouldBeShown = true,
                            Description = "Et et illum sunt."
                        },
                        new
                        {
                            Id = 18,
                            ImageId = 18,
                            Name = "Incredible Soft Shirt",
                            OrderNo = 6L,
                            Price = 459.20m,
                            ShouldBeShown = true,
                            Description = "Omnis consequatur porro corporis sed dolor."
                        },
                        new
                        {
                            Id = 19,
                            ImageId = 19,
                            Name = "Handmade Concrete Chicken",
                            Price = 1524.61m,
                            ShouldBeShown = false,
                            Description = "Asperiores odit velit aut quo neque."
                        },
                        new
                        {
                            Id = 20,
                            ImageId = 20,
                            Name = "Incredible Plastic Sausages",
                            Price = 0m,
                            ShouldBeShown = false,
                            Description = "Provident voluptas earum voluptatem cum ad est eum."
                        });
                });

            modelBuilder.Entity("ComponentItem", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Component", null)
                        .WithMany()
                        .HasForeignKey("ComponentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QueflityMVC.Domain.Common.BasePurchasableEntity", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Element", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Item", "Item")
                        .WithMany("SetElements")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.Kit", "Kit")
                        .WithMany("Elements")
                        .HasForeignKey("KitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Kit");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Item", null)
                        .WithMany("Kits")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.Navigation("Kits");

                    b.Navigation("SetElements");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.Navigation("Elements");
                });
#pragma warning restore 612, 618
        }
    }
}
