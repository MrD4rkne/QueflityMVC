// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QueflityMVC.Infrastructure;

#nullable disable

namespace QueflityMVC.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240222151354_Seed-Data")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IngredientItem", b =>
                {
                    b.Property<int>("IngredientsId")
                        .HasColumnType("int");

                    b.Property<int>("ItemsId")
                        .HasColumnType("int");

                    b.HasKey("IngredientsId", "ItemsId");

                    b.HasIndex("ItemsId");

                    b.ToTable("IngredientItem");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QueflityMVC.Domain.Common.BasePurchasableEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<bool>("ShouldBeShown")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("BasePurchasableEntity");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BasePurchasableEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Games"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jewelery"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Garden"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Grocery"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<long>("ItemsAmmount")
                        .HasColumnType("bigint");

                    b.Property<int>("KitId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerItem")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("KitId");

                    b.ToTable("SetElements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 3,
                            ItemsAmmount = 2L,
                            KitId = 19,
                            PricePerItem = 9.77m
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 9,
                            ItemsAmmount = 2L,
                            KitId = 19,
                            PricePerItem = 118.28m
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 3,
                            ItemsAmmount = 1L,
                            KitId = 14,
                            PricePerItem = 36.30m
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 4,
                            ItemsAmmount = 9L,
                            KitId = 12,
                            PricePerItem = 76.20m
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 5,
                            ItemsAmmount = 10L,
                            KitId = 14,
                            PricePerItem = 18.26m
                        },
                        new
                        {
                            Id = 6,
                            ItemId = 9,
                            ItemsAmmount = 9L,
                            KitId = 11,
                            PricePerItem = 61.67m
                        },
                        new
                        {
                            Id = 7,
                            ItemId = 4,
                            ItemsAmmount = 6L,
                            KitId = 18,
                            PricePerItem = 63.88m
                        },
                        new
                        {
                            Id = 8,
                            ItemId = 4,
                            ItemsAmmount = 2L,
                            KitId = 19,
                            PricePerItem = 69.00m
                        },
                        new
                        {
                            Id = 9,
                            ItemId = 3,
                            ItemsAmmount = 2L,
                            KitId = 11,
                            PricePerItem = 48.93m
                        },
                        new
                        {
                            Id = 12,
                            ItemId = 9,
                            ItemsAmmount = 4L,
                            KitId = 15,
                            PricePerItem = 62.12m
                        },
                        new
                        {
                            Id = 13,
                            ItemId = 6,
                            ItemsAmmount = 7L,
                            KitId = 18,
                            PricePerItem = 9.77m
                        },
                        new
                        {
                            Id = 14,
                            ItemId = 9,
                            ItemsAmmount = 5L,
                            KitId = 14,
                            PricePerItem = 78.13m
                        },
                        new
                        {
                            Id = 15,
                            ItemId = 2,
                            ItemsAmmount = 2L,
                            KitId = 15,
                            PricePerItem = 30.81m
                        },
                        new
                        {
                            Id = 16,
                            ItemId = 2,
                            ItemsAmmount = 10L,
                            KitId = 14,
                            PricePerItem = 48.08m
                        },
                        new
                        {
                            Id = 18,
                            ItemId = 6,
                            ItemsAmmount = 3L,
                            KitId = 17,
                            PricePerItem = 74.78m
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AltDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AltDescription = "aut",
                            FileUrl = "https://picsum.photos/640/480/?image=204"
                        },
                        new
                        {
                            Id = 2,
                            AltDescription = "quo",
                            FileUrl = "https://picsum.photos/640/480/?image=298"
                        },
                        new
                        {
                            Id = 3,
                            AltDescription = "omnis",
                            FileUrl = "https://picsum.photos/640/480/?image=1032"
                        },
                        new
                        {
                            Id = 4,
                            AltDescription = "doloremque",
                            FileUrl = "https://picsum.photos/640/480/?image=68"
                        },
                        new
                        {
                            Id = 5,
                            AltDescription = "eius",
                            FileUrl = "https://picsum.photos/640/480/?image=381"
                        },
                        new
                        {
                            Id = 6,
                            AltDescription = "tempora",
                            FileUrl = "https://picsum.photos/640/480/?image=489"
                        },
                        new
                        {
                            Id = 7,
                            AltDescription = "amet",
                            FileUrl = "https://picsum.photos/640/480/?image=684"
                        },
                        new
                        {
                            Id = 8,
                            AltDescription = "aut",
                            FileUrl = "https://picsum.photos/640/480/?image=857"
                        },
                        new
                        {
                            Id = 9,
                            AltDescription = "eligendi",
                            FileUrl = "https://picsum.photos/640/480/?image=439"
                        },
                        new
                        {
                            Id = 10,
                            AltDescription = "nam",
                            FileUrl = "https://picsum.photos/640/480/?image=684"
                        },
                        new
                        {
                            Id = 11,
                            AltDescription = "eos",
                            FileUrl = "https://picsum.photos/640/480/?image=653"
                        },
                        new
                        {
                            Id = 12,
                            AltDescription = "dolor",
                            FileUrl = "https://picsum.photos/640/480/?image=1018"
                        },
                        new
                        {
                            Id = 13,
                            AltDescription = "quis",
                            FileUrl = "https://picsum.photos/640/480/?image=484"
                        },
                        new
                        {
                            Id = 14,
                            AltDescription = "soluta",
                            FileUrl = "https://picsum.photos/640/480/?image=436"
                        },
                        new
                        {
                            Id = 15,
                            AltDescription = "recusandae",
                            FileUrl = "https://picsum.photos/640/480/?image=651"
                        },
                        new
                        {
                            Id = 16,
                            AltDescription = "impedit",
                            FileUrl = "https://picsum.photos/640/480/?image=304"
                        },
                        new
                        {
                            Id = 17,
                            AltDescription = "doloremque",
                            FileUrl = "https://picsum.photos/640/480/?image=885"
                        },
                        new
                        {
                            Id = 18,
                            AltDescription = "quo",
                            FileUrl = "https://picsum.photos/640/480/?image=457"
                        },
                        new
                        {
                            Id = 19,
                            AltDescription = "id",
                            FileUrl = "https://picsum.photos/640/480/?image=268"
                        },
                        new
                        {
                            Id = 20,
                            AltDescription = "doloremque",
                            FileUrl = "https://picsum.photos/640/480/?image=166"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Granite"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Frozen"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Steel"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Frozen"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Steel"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Concrete"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Fresh"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Wooden"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Steel"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Steel"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Wooden"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Concrete"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Rubber"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Fresh"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Frozen"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Fresh"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.HasBaseType("QueflityMVC.Domain.Common.BasePurchasableEntity");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasIndex("CategoryId");

                    b.HasDiscriminator().HasValue("Item");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageId = 1,
                            Name = "Ergonomic Cotton Sausages",
                            Price = 100.03m,
                            ShouldBeShown = false,
                            CategoryId = 4
                        },
                        new
                        {
                            Id = 2,
                            ImageId = 2,
                            Name = "Intelligent Wooden Pants",
                            Price = 34.74m,
                            ShouldBeShown = false,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 3,
                            ImageId = 3,
                            Name = "Ergonomic Wooden Towels",
                            Price = 44.30m,
                            ShouldBeShown = false,
                            CategoryId = 2
                        },
                        new
                        {
                            Id = 4,
                            ImageId = 4,
                            Name = "Licensed Plastic Cheese",
                            Price = 4.27m,
                            ShouldBeShown = false,
                            CategoryId = 2
                        },
                        new
                        {
                            Id = 5,
                            ImageId = 5,
                            Name = "Refined Rubber Chair",
                            Price = 18.71m,
                            ShouldBeShown = false,
                            CategoryId = 4
                        },
                        new
                        {
                            Id = 6,
                            ImageId = 6,
                            Name = "Awesome Plastic Pants",
                            Price = 14.02m,
                            ShouldBeShown = false,
                            CategoryId = 2
                        },
                        new
                        {
                            Id = 7,
                            ImageId = 7,
                            Name = "Rustic Steel Sausages",
                            Price = 52.57m,
                            ShouldBeShown = false,
                            CategoryId = 2
                        },
                        new
                        {
                            Id = 8,
                            ImageId = 8,
                            Name = "Awesome Soft Chips",
                            Price = 131.47m,
                            ShouldBeShown = false,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 9,
                            ImageId = 9,
                            Name = "Intelligent Concrete Ball",
                            Price = 25.95m,
                            ShouldBeShown = false,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 10,
                            ImageId = 10,
                            Name = "Awesome Soft Bike",
                            Price = 14.77m,
                            ShouldBeShown = false,
                            CategoryId = 5
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.HasBaseType("QueflityMVC.Domain.Common.BasePurchasableEntity");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.HasIndex("ItemId");

                    b.HasDiscriminator().HasValue("Kit");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            ImageId = 11,
                            Name = "Tasty Cotton Car",
                            Price = 652.89m,
                            ShouldBeShown = false,
                            Description = "Iste eaque consequatur repellendus."
                        },
                        new
                        {
                            Id = 12,
                            ImageId = 12,
                            Name = "Fantastic Granite Salad",
                            Price = 685.80m,
                            ShouldBeShown = false,
                            Description = "Tempora sit odit nihil."
                        },
                        new
                        {
                            Id = 13,
                            ImageId = 13,
                            Name = "Fantastic Cotton Computer",
                            Price = 0m,
                            ShouldBeShown = false,
                            Description = "Aperiam id dolorum cum."
                        },
                        new
                        {
                            Id = 14,
                            ImageId = 14,
                            Name = "Licensed Steel Tuna",
                            Price = 1090.35m,
                            ShouldBeShown = false,
                            Description = "Dolorum sit voluptas unde ad natus qui."
                        },
                        new
                        {
                            Id = 15,
                            ImageId = 15,
                            Name = "Sleek Frozen Chicken",
                            Price = 310.10m,
                            ShouldBeShown = false,
                            Description = "Tempore quo modi omnis delectus saepe possimus voluptatibus ut."
                        },
                        new
                        {
                            Id = 16,
                            ImageId = 16,
                            Name = "Fantastic Steel Chicken",
                            Price = 0m,
                            ShouldBeShown = false,
                            Description = "Animi dolor a."
                        },
                        new
                        {
                            Id = 17,
                            ImageId = 17,
                            Name = "Awesome Wooden Towels",
                            Price = 224.34m,
                            ShouldBeShown = false,
                            Description = "Laudantium praesentium sit inventore non voluptatem deserunt doloremque."
                        },
                        new
                        {
                            Id = 18,
                            ImageId = 18,
                            Name = "Gorgeous Granite Ball",
                            Price = 451.67m,
                            ShouldBeShown = false,
                            Description = "Qui rerum consequatur autem adipisci dolorem voluptate."
                        },
                        new
                        {
                            Id = 19,
                            ImageId = 19,
                            Name = "Practical Steel Pizza",
                            Price = 394.10m,
                            ShouldBeShown = false,
                            Description = "Et eius nemo numquam aperiam."
                        },
                        new
                        {
                            Id = 20,
                            ImageId = 20,
                            Name = "Handmade Steel Sausages",
                            Price = 0m,
                            ShouldBeShown = false,
                            Description = "Quis quo omnis aut ducimus vitae corrupti."
                        });
                });

            modelBuilder.Entity("IngredientItem", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QueflityMVC.Domain.Common.BasePurchasableEntity", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Element", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Item", "Item")
                        .WithMany("SetElements")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.Kit", "Kit")
                        .WithMany("Elements")
                        .HasForeignKey("KitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Kit");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Item", null)
                        .WithMany("Kits")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.Navigation("Kits");

                    b.Navigation("SetElements");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.Navigation("Elements");
                });
#pragma warning restore 612, 618
        }
    }
}
