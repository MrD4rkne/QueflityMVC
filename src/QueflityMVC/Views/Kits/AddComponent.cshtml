@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Authorization
@using QueflityMVC.Application.Constants
@model QueflityMVC.Application.ViewModels.Element.ElementVm

@{
    ViewData["Title"] = "Add item to kit";
    var canListEntities = (await AuthorizationService.AuthorizeAsync(User, Policies.ENTITIES_LIST)).Succeeded;
}

<h1>Create membership</h1>

<h4>Add item in your set!</h4>
<hr/>

<form asp-action="AddComponent">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col-md">
            <h4>Set</h4>
            <partial name="~/Views/Kits/_KitDetailsPartial.cshtml" model="@Model.KitDetailsVm"/>
            @Html.HiddenFor(model => model.KitDetailsVm.Id)
            @Html.HiddenFor(model => model.KitDetailsVm.Price)
            @Html.HiddenFor(model => model.KitDetailsVm.ShouldBeShown)
            @Html.HiddenFor(model => model.KitDetailsVm.Name)
            @Html.HiddenFor(model => model.KitDetailsVm!.Image!.Id)
            @Html.HiddenFor(model => model.KitDetailsVm!.Image!.AltDescription)
            @Html.HiddenFor(model => model.KitDetailsVm!.Image!.FileUrl)
        </div>
        <div class="col-md">
            <h4>Item</h4>
            <partial name="~/Views/Items/_ItemDetailsPartial.cshtml" model="@Model.Item"/>
            @Html.HiddenFor(model => model.Item.Id)
            @Html.HiddenFor(model => model.Item.Price)
            @Html.HiddenFor(model => model.Item.ShouldBeShown)
            @Html.HiddenFor(model => model.Item.CategoryId)
            @Html.HiddenFor(model => model.Item.Name)
            @Html.HiddenFor(model => model.Item!.Image!.Id)
            @Html.HiddenFor(model => model.Item!.Image!.AltDescription)
            @Html.HiddenFor(model => model.Item!.Image!.FileUrl)
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            @Html.HiddenFor(x => x.Id)

            <div class="row">
                <div class="col-md">
                    <div class="form-floating">
                        <input asp-for="ItemsAmmount" class="form-control" oninput="CalculateTotal()" type="number" min="0"/>
                        <label asp-for="ItemsAmmount">Quantity</label>
                        <span asp-validation-for="ItemsAmmount" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md">
                    <div class="form-floating">
                        <input asp-for="PricePerItem" class="form-control" oninput="CalculateTotal()" type="number" step="0.01" min="0"/>
                        <label asp-for="PricePerItem">Price per pcs</label>
                        <span asp-validation-for="PricePerItem" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md">
                    <div class="form-floating">
                        <input id="total" class="form-control" readonly value="0"/>
                        <label for="total">Total</label>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </div>
    </div>
</form>

@if (canListEntities)
{
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
}

@section Scripts
{
    <script type="text/javascript">
        function CalculateTotal() {
            var pricePerItem = document.getElementById("@Html.IdFor(x => x.PricePerItem)").value;
            var quantity = document.getElementById("@Html.IdFor(x => x.ItemsAmmount)").value;
            var total = 0;

            if (pricePerItem >= 0 && quantity >= 0) {
                total = pricePerItem * quantity;
            }
            else {
                total = NaN;
            }

            var totalLabel = document.getElementById("total");
            totalLabel.value = total.toFixed(2);
        }
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}