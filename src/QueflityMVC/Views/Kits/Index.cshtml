@using Microsoft.AspNetCore.Authorization
@using QueflityMVC.Application.Constants;
@using QueflityMVC.Application.ViewModels.Kit
@inject IAuthorizationService AuthorizationService
@model ListKitsVM

@{
    ViewData["Title"] = "Index";
    int[] options = new int[] { 2, 5, 10, 25, 50, 100 };
    bool canCreateEntities = (await AuthorizationService.AuthorizeAsync(User, Policies.ENTITIES_CREATE)).Succeeded;
    bool canEditEntities = (await AuthorizationService.AuthorizeAsync(User, Policies.ENTITIES_EDIT)).Succeeded;
    bool canListEntities = (await AuthorizationService.AuthorizeAsync(User, Policies.ENTITIES_LIST)).Succeeded;
}

<h1>Kits</h1>
<h2>Below you can list and filtr your kits.</h2>

@if (canCreateEntities)
{
    <p>
        <a class="btn btn-primary" asp-action="Create">Create New</a>
    </p>
}

<form asp-action="Index" asp-controller="Kits" method="post" data="@Model.Pagination.Info">
    @if (Model.ItemId.HasValue)
    {
        <p>
            Curretnly you see sets that have item of id @Model.ItemId as a part of them
            <a href="#" onclick="RemoveItemFilter()">Click here to remove item filter</a>
        </p>

    }

    <ul class="nav gap-1">
        <li class="nav-item">
            <input type="text" class="form-control" placeholder="Search Phrase" asp-for="NameFilter" />
        </li>
        <li class="nav-item">
            <button type="submit" class="btn btn-secondary">Search</button>
        </li>
        <li class="nav-item">
            <select class="form-select" asp-for="Pagination.Info.PageSize" onchange="javascript:PageSizeSelected()">
                @foreach (int i in options)
                {
                    @if (i == Model.Pagination.Info.PageSize)
                    {
                        <option value="@i" selected>@i</option>
                    }
                    else
                    {
                        <option value="@i">@i</option>
                    }
                }
            </select>
        </li>
    </ul>
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>
                    Name
                </th>
                <th>
                    Visibility
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Pagination.Entities)
            {
                <tr>
                    <td>
                        @if (item.Image != null)
                        {
                            <img src="@item.Image.FileUrl" alt="@item.Image.AltDescription" style="height:30px" />
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" checked="@(item.ShouldBeShown? "checked":null)" disabled>
                            @if (item.ShouldBeShown)
                            {
                                <label class="form-check-label">Visible</label>
                            }
                            else
                            {
                                <label class="form-check-label">Hidden</label>
                            }
                        </div>
                    </td>
                    <td>
                        @if (canEditEntities)
                        {
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-secondary btn-sm" })
                        }
                        @if (canListEntities)
                        {
                            @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-outline-success btn-sm" })
                        }
                        @if (canCreateEntities)
                        {
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger btn-sm" })
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @Html.HiddenFor(model => model.ItemId)
    <div class="row">
        <partial name="_PaginationPartial" for="Pagination.Info" />
    </div>
</form>

@section Scripts
{
    <script type="text/javascript">
        function PageSizeSelected() {
            SubmitPagination();
        }

        function RemoveItemFilter() {
            document.getElementById("@Html.IdFor(x=>x.ItemId)").value = "";
            document.forms[1].submit();
        }
    </script>
}