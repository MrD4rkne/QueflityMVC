@using Microsoft.AspNetCore.Authorization
@using QueflityMVC.Application.Constants;
@inject IAuthorizationService AuthorizationService
@model QueflityMVC.Application.ViewModels.Kit.KitVm

@{
    ViewData["Title"] = "Create";
    bool canListEntities = (await AuthorizationService.AuthorizeAsync(User, Policies.ENTITIES_LIST)).Succeeded;
}

<h1>Create</h1>

<h4>Add your precious kit!</h4>
<hr />
<div class="row">
    <form asp-action="Create" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="card">
            <div class="card-header">
                Image
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">
                    <div class="mb-3">
                        <input class="form-control" asp-for="Image!.FormFile" type="file">
                        <span asp-validation-for="Image.FormFile" class="text-danger"></span>
                    </div>
                </li>
                <li class="list-group-item">
                    <div class="mb-3">
                        <label asp-for="Image!.AltDescription" class="control-label">Alternative description</label>
                        <input asp-for="Image!.AltDescription" class="form-control" />
                        <span asp-validation-for="Image!.AltDescription" class="text-danger"></span>
                    </div>
                </li>
            </ul>
        </div>
        <div class="form-group">
            <label asp-for="Name" class="control-label"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>


        <div class="btn-group" role="group" aria-label="Submit form">
            <button type="submit" class="btn btn-outline-primary" formaction="Create">Create</button>
            <button type="submit" class="btn btn-outline-primary" formaction="?shouldRouteToDetails=True">& add items</button>
        </div>
    </form>
</div>

@if (canListEntities)
{
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        function AccessChange(className, isDisabled) {
            console.log(className);
            const inputs = document.querySelectorAll('input#' + className);
            inputs.forEach(input => input.disabled = isDisabled);
        }
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

