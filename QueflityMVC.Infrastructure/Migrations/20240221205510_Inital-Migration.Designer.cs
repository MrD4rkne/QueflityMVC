// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QueflityMVC.Infrastructure;

#nullable disable

namespace QueflityMVC.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240221205510_Inital-Migration")]
    partial class InitalMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IngredientItem", b =>
                {
                    b.Property<int>("IngredientsId")
                        .HasColumnType("int");

                    b.Property<int>("ItemsId")
                        .HasColumnType("int");

                    b.HasKey("IngredientsId", "ItemsId");

                    b.HasIndex("ItemsId");

                    b.ToTable("IngredientItem");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QueflityMVC.Domain.Common.BasePurchasableEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<bool>("ShouldBeShown")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("BasePurchasableEntity");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BasePurchasableEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Jewelery"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Garden"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Games"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Books"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Toys"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<long>("ItemsAmmount")
                        .HasColumnType("bigint");

                    b.Property<int>("KitId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerItem")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("KitId");

                    b.ToTable("SetElements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 1,
                            ItemsAmmount = 10L,
                            KitId = 16,
                            PricePerItem = 26.22m
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 5,
                            ItemsAmmount = 1L,
                            KitId = 14,
                            PricePerItem = 31.08m
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 6,
                            ItemsAmmount = 8L,
                            KitId = 15,
                            PricePerItem = 2.86m
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 6,
                            ItemsAmmount = 7L,
                            KitId = 16,
                            PricePerItem = 2.01m
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 3,
                            ItemsAmmount = 10L,
                            KitId = 20,
                            PricePerItem = 87.70m
                        },
                        new
                        {
                            Id = 6,
                            ItemId = 5,
                            ItemsAmmount = 10L,
                            KitId = 15,
                            PricePerItem = 5.85m
                        },
                        new
                        {
                            Id = 7,
                            ItemId = 10,
                            ItemsAmmount = 6L,
                            KitId = 13,
                            PricePerItem = 98.65m
                        },
                        new
                        {
                            Id = 8,
                            ItemId = 8,
                            ItemsAmmount = 5L,
                            KitId = 19,
                            PricePerItem = 95.38m
                        },
                        new
                        {
                            Id = 9,
                            ItemId = 5,
                            ItemsAmmount = 6L,
                            KitId = 18,
                            PricePerItem = 44.77m
                        },
                        new
                        {
                            Id = 10,
                            ItemId = 6,
                            ItemsAmmount = 3L,
                            KitId = 18,
                            PricePerItem = 7.72m
                        },
                        new
                        {
                            Id = 11,
                            ItemId = 4,
                            ItemsAmmount = 7L,
                            KitId = 19,
                            PricePerItem = 12.86m
                        },
                        new
                        {
                            Id = 12,
                            ItemId = 10,
                            ItemsAmmount = 2L,
                            KitId = 12,
                            PricePerItem = 107.98m
                        },
                        new
                        {
                            Id = 14,
                            ItemId = 7,
                            ItemsAmmount = 1L,
                            KitId = 19,
                            PricePerItem = 51.62m
                        },
                        new
                        {
                            Id = 15,
                            ItemId = 2,
                            ItemsAmmount = 7L,
                            KitId = 18,
                            PricePerItem = 29.78m
                        },
                        new
                        {
                            Id = 16,
                            ItemId = 3,
                            ItemsAmmount = 5L,
                            KitId = 12,
                            PricePerItem = 185.85m
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AltDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AltDescription = "expedita",
                            FileUrl = "https://picsum.photos/640/480/?image=210"
                        },
                        new
                        {
                            Id = 2,
                            AltDescription = "voluptatem",
                            FileUrl = "https://picsum.photos/640/480/?image=986"
                        },
                        new
                        {
                            Id = 3,
                            AltDescription = "dolorem",
                            FileUrl = "https://picsum.photos/640/480/?image=290"
                        },
                        new
                        {
                            Id = 4,
                            AltDescription = "ut",
                            FileUrl = "https://picsum.photos/640/480/?image=475"
                        },
                        new
                        {
                            Id = 5,
                            AltDescription = "debitis",
                            FileUrl = "https://picsum.photos/640/480/?image=252"
                        },
                        new
                        {
                            Id = 6,
                            AltDescription = "nihil",
                            FileUrl = "https://picsum.photos/640/480/?image=492"
                        },
                        new
                        {
                            Id = 7,
                            AltDescription = "nisi",
                            FileUrl = "https://picsum.photos/640/480/?image=963"
                        },
                        new
                        {
                            Id = 8,
                            AltDescription = "voluptas",
                            FileUrl = "https://picsum.photos/640/480/?image=389"
                        },
                        new
                        {
                            Id = 9,
                            AltDescription = "maxime",
                            FileUrl = "https://picsum.photos/640/480/?image=582"
                        },
                        new
                        {
                            Id = 10,
                            AltDescription = "iure",
                            FileUrl = "https://picsum.photos/640/480/?image=508"
                        },
                        new
                        {
                            Id = 11,
                            AltDescription = "dolores",
                            FileUrl = "https://picsum.photos/640/480/?image=1059"
                        },
                        new
                        {
                            Id = 12,
                            AltDescription = "aliquid",
                            FileUrl = "https://picsum.photos/640/480/?image=1051"
                        },
                        new
                        {
                            Id = 13,
                            AltDescription = "voluptas",
                            FileUrl = "https://picsum.photos/640/480/?image=153"
                        },
                        new
                        {
                            Id = 14,
                            AltDescription = "quis",
                            FileUrl = "https://picsum.photos/640/480/?image=631"
                        },
                        new
                        {
                            Id = 15,
                            AltDescription = "et",
                            FileUrl = "https://picsum.photos/640/480/?image=193"
                        },
                        new
                        {
                            Id = 16,
                            AltDescription = "suscipit",
                            FileUrl = "https://picsum.photos/640/480/?image=506"
                        },
                        new
                        {
                            Id = 17,
                            AltDescription = "ullam",
                            FileUrl = "https://picsum.photos/640/480/?image=621"
                        },
                        new
                        {
                            Id = 18,
                            AltDescription = "nam",
                            FileUrl = "https://picsum.photos/640/480/?image=493"
                        },
                        new
                        {
                            Id = 19,
                            AltDescription = "et",
                            FileUrl = "https://picsum.photos/640/480/?image=586"
                        },
                        new
                        {
                            Id = 20,
                            AltDescription = "aspernatur",
                            FileUrl = "https://picsum.photos/640/480/?image=563"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Concrete"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Wooden"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Concrete"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Soft"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Frozen"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Plastic"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Concrete"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Rubber"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Rubber"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Rubber"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Cotton"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Wooden"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Rubber"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Wooden"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Rubber"
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.HasBaseType("QueflityMVC.Domain.Common.BasePurchasableEntity");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasIndex("CategoryId");

                    b.HasDiscriminator().HasValue("Item");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageId = 1,
                            Name = "Unbranded Metal Chips",
                            Price = 8.81m,
                            ShouldBeShown = false,
                            CategoryId = 2
                        },
                        new
                        {
                            Id = 2,
                            ImageId = 2,
                            Name = "Awesome Plastic Car",
                            Price = 144.50m,
                            ShouldBeShown = false,
                            CategoryId = 4
                        },
                        new
                        {
                            Id = 3,
                            ImageId = 3,
                            Name = "Tasty Metal Keyboard",
                            Price = 128.12m,
                            ShouldBeShown = false,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 4,
                            ImageId = 4,
                            Name = "Handmade Cotton Pizza",
                            Price = 11.96m,
                            ShouldBeShown = false,
                            CategoryId = 4
                        },
                        new
                        {
                            Id = 5,
                            ImageId = 5,
                            Name = "Generic Concrete Bacon",
                            Price = 40.45m,
                            ShouldBeShown = false,
                            CategoryId = 2
                        },
                        new
                        {
                            Id = 6,
                            ImageId = 6,
                            Name = "Intelligent Concrete Chips",
                            Price = 52.47m,
                            ShouldBeShown = false,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 7,
                            ImageId = 7,
                            Name = "Generic Soft Fish",
                            Price = 48.76m,
                            ShouldBeShown = false,
                            CategoryId = 3
                        },
                        new
                        {
                            Id = 8,
                            ImageId = 8,
                            Name = "Gorgeous Cotton Pizza",
                            Price = 77.27m,
                            ShouldBeShown = false,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 9,
                            ImageId = 9,
                            Name = "Gorgeous Soft Car",
                            Price = 127.44m,
                            ShouldBeShown = false,
                            CategoryId = 1
                        },
                        new
                        {
                            Id = 10,
                            ImageId = 10,
                            Name = "Fantastic Concrete Hat",
                            Price = 46.13m,
                            ShouldBeShown = false,
                            CategoryId = 3
                        });
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.HasBaseType("QueflityMVC.Domain.Common.BasePurchasableEntity");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.HasIndex("ItemId");

                    b.HasDiscriminator().HasValue("Kit");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            ImageId = 11,
                            Name = "Tasty Cotton Computer",
                            Price = 0m,
                            ShouldBeShown = false,
                            Description = "Culpa aut illum architecto facere voluptatibus et aperiam rem."
                        },
                        new
                        {
                            Id = 12,
                            ImageId = 12,
                            Name = "Gorgeous Soft Pants",
                            Price = 1145.21m,
                            ShouldBeShown = false,
                            Description = "Fugit praesentium aut."
                        },
                        new
                        {
                            Id = 13,
                            ImageId = 13,
                            Name = "Licensed Metal Salad",
                            Price = 591.90m,
                            ShouldBeShown = false,
                            Description = "Voluptatem impedit eius eligendi."
                        },
                        new
                        {
                            Id = 14,
                            ImageId = 14,
                            Name = "Rustic Plastic Mouse",
                            Price = 31.08m,
                            ShouldBeShown = false,
                            Description = "Accusantium dolorem ad iure repellendus asperiores illum magni corrupti odio."
                        },
                        new
                        {
                            Id = 15,
                            ImageId = 15,
                            Name = "Gorgeous Rubber Tuna",
                            Price = 81.38m,
                            ShouldBeShown = false,
                            Description = "Qui omnis velit consequuntur."
                        },
                        new
                        {
                            Id = 16,
                            ImageId = 16,
                            Name = "Fantastic Metal Bike",
                            Price = 276.27m,
                            ShouldBeShown = false,
                            Description = "Fugit sed id et voluptas labore cumque sed dolorum ullam."
                        },
                        new
                        {
                            Id = 17,
                            ImageId = 17,
                            Name = "Practical Rubber Shirt",
                            Price = 0m,
                            ShouldBeShown = false,
                            Description = "Et ducimus temporibus fugiat quas."
                        },
                        new
                        {
                            Id = 18,
                            ImageId = 18,
                            Name = "Tasty Wooden Shoes",
                            Price = 500.24m,
                            ShouldBeShown = false,
                            Description = "Et non nesciunt qui inventore quis possimus libero voluptatum."
                        },
                        new
                        {
                            Id = 19,
                            ImageId = 19,
                            Name = "Gorgeous Soft Chicken",
                            Price = 618.54m,
                            ShouldBeShown = false,
                            Description = "Id ut ut aut ullam soluta aliquam qui iusto."
                        },
                        new
                        {
                            Id = 20,
                            ImageId = 20,
                            Name = "Sleek Concrete Sausages",
                            Price = 877.00m,
                            ShouldBeShown = false,
                            Description = "Ea quod dolores nihil doloremque commodi."
                        });
                });

            modelBuilder.Entity("IngredientItem", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QueflityMVC.Domain.Common.BasePurchasableEntity", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Element", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Item", "Item")
                        .WithMany("SetElements")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("QueflityMVC.Domain.Models.Kit", "Kit")
                        .WithMany("Elements")
                        .HasForeignKey("KitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Kit");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.HasOne("QueflityMVC.Domain.Models.Item", null)
                        .WithMany("Kits")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Item", b =>
                {
                    b.Navigation("Kits");

                    b.Navigation("SetElements");
                });

            modelBuilder.Entity("QueflityMVC.Domain.Models.Kit", b =>
                {
                    b.Navigation("Elements");
                });
#pragma warning restore 612, 618
        }
    }
}
