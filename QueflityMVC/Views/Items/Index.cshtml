@using Microsoft.AspNetCore.Authorization
@using QueflityMVC.Application.Constants;
@inject IAuthorizationService AuthorizationService
@model QueflityMVC.Application.ViewModels.Item.ListItemsVM

@{
    ViewData["Title"] = "List";
    int[] options = new int[] { 2, 5, 10, 25, 50, 100 };
    bool canCreateEntities = (await AuthorizationService.AuthorizeAsync(User, Policies.ENTITIES_CREATE)).Succeeded;
    bool canEditEntities = (await AuthorizationService.AuthorizeAsync(User, Policies.ENTITIES_EDIT)).Succeeded;
    bool canListEntities = (await AuthorizationService.AuthorizeAsync(User, Policies.ENTITIES_LIST)).Succeeded;
}

<h1>Items</h1>

@if (canCreateEntities)
{
    <p>
        @if (Model.CategoryId.HasValue)
        {
            @Html.ActionLink("Create New with this category", "Create", new { categoryId = Model.CategoryId.Value }, new{ @class="btn btn-primary" })
        }
        else
        {
            <a class="btn btn-primary" asp-action="Create">Create New</a>
        }
    </p>
}

<form asp-action="Index" asp-controller="Items" method="post">
    <ul class="nav gap-1">
        <li class="nav-item">
            <input type="text" class="form-control" placeholder="Search Phrase" asp-for="NameFilter" name="nameFilter" id="nameFilter" />
        </li>
        <li class="nav-item">
            <button type="submit" class="btn btn-secondary">Search</button>
        </li>
        <li class="nav-item">
            <select class="form-select" asp-for="Pagination.Info.PageSize" onchange="javascript:PageSizeSelected()">
                @foreach (int i in options)
                {
                    @if (i == Model.Pagination.PageSize)
                    {
                        <option value="@i" selected>@i</option>
                    }
                    else
                    {
                        <option value="@i">@i</option>
                    }
                }
            </select>
        </li>
    </ul>
    <div class="row">
        <table class="table">
            <thead>
                <tr>
                    <th></th>
                    <th>
                        Name
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Pagination.Entities)
                {
                    <tr>
                        <td>
                            @if (item.Image != null)
                            {
                                <img src="@item.Image.FileUrl" alt="@item.Image.AltDescription" style="height:30px" />
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @if (canEditEntities)
                            {
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-secondary btn-sm"})
                            }
                            @if (canListEntities)
                            {
                                @Html.ActionLink("Ingredients", "Ingredients", new { id = item.Id }, new { @class = "btn btn-outline-success btn-sm"})
                            }
                            @if (canCreateEntities)
                            {
                                @Html.ActionLink("Delete", "Delete", new {  id = item.Id }, new { @class = "btn btn-outline-danger btn-sm"})
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
    <div class="row">
        <partial name="_PaginationPartial" for="Pagination.Info" />
    </div>
</form>

@section Scripts
    {
    <script type="text/javascript">
        function PageSizeSelected() {
            SubmitPagination();
        }
    </script>
}
